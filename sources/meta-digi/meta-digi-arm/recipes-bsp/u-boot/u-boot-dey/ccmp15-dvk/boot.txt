#
# U-Boot bootscript for NAND/SD images created by Yocto.
#

# As the first step in the boot script, check if we are using DualBoot. This
# requires the script to change some variables and save them, while the rest
# of the script changes variables only temporarily without saving them.

# Build boot attempt message string
if test "${bootlimit}" -gt 0 && test "${bootcount}" -gt 0; then
	bootattempt="(boot attempt ${bootcount}/${bootlimit})"
fi

# Dual boot verification
if test "${dualboot}" = "yes"; then
	if test "${active_system}" = "linux_a"; then
		echo "Booting from system A ${bootattempt}"
		setenv tmp_rootfsvol ${rootfsvol_a}
	else
		echo "Booting from system B ${bootattempt}"
		setenv tmp_rootfsvol ${rootfsvol_b}
	fi
	if test "${mtdbootpart}" != "${active_system}"; then
		setenv mtdbootpart ${active_system}
		env_save_needed="1"
	fi
	if test "${rootfsvol}" != "${tmp_rootfsvol}"; then
		setenv rootfsvol ${tmp_rootfsvol}
		env_save_needed="1"
	fi
	if test "${env_save_needed}" = "1"; then
		env delete tmp_rootfsvol
		env save
	fi
else
	echo "Booting system ${bootattempt}"
	# Check the boot source.
	if test "${mtdbootpart}" = "linux"; then
		# We are booting from the NAND using 'linux'.
		true
	elif test "${mtdbootpart}" = "recovery"; then
		# We are booting from the NAND using 'recovery'.
		setenv boot_initrd true
		setenv initrd_file uramdisk-recovery.img
	fi
	setenv rootfsvol rootfs
fi

# Back up environment variables
setenv ORIG_overlays ${overlays}

#
# Determine overlays to apply depending on the hardware capabilities
# described by the HWID, SOM version, and carrier board version.
#
setexpr module_has_wifi ${hwid_2} \& 20000
setexpr module_has_wifi ${module_has_wifi} / 20000
setexpr module_has_bt ${hwid_2} \& 40000
setexpr module_has_bt ${module_has_bt} / 40000
setexpr som_hv ${hwid_2} \& 78
setexpr som_hv ${som_hv} / 8

# Apply SOMv1 overlay if the HWID field 'hv' is 1
if test "${som_hv}" -eq "1"; then
	setenv overlays ccmp15_v1.dtbo,${overlays}
fi

if test "${module_has_bt}" = "1" && test -z "${disable_bt}"; then
	setenv overlays ccmp15_bt.dtbo,${overlays}
fi

if test "${module_has_wifi}" = "1" && test -z "${disable_wifi}"; then
	setenv overlays ccmp15_wifi.dtbo,${overlays}
fi

# Apply DVKv1 overlay if the board_version is 1
if test -z "${board_version}" || test "${board_version}" -eq "1"; then
	setenv overlays ccmp15-dvk_v1.dtbo,${overlays}
fi

# Apply DVKv2 overlay if the board_version is 2
if test "${board_version}" -eq "2"; then
	setenv overlays ccmp15-dvk_v2.dtbo,${overlays}
fi

if test "${boot_device}" = "mmc"; then
	dboot linux mmc
else
	if test "${dboot_kernel_var}" = "fitimage"; then
		# Set temp var to avoid re-loading fitimage
		setenv temp-fitimg-loaded yes
	fi
	dboot linux nand ${mtdbootpart}
fi



# We only get here in case of an error on the dboot command.

# Undo changes to environment variables
setenv overlays ${ORIG_overlays}
setenv ORIG_overlays
